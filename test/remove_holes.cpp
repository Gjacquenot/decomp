
#include <catch2/catch.hpp>
#include <decomp/triangulation.hpp>
#include <decomp/output.hpp>
#include <fstream>

using namespace decomp;

TEST_CASE("remove holes from polygon")
{
    std::vector<Point> pointList = { { -2, -2 }, { 2, -2 }, { 2, 2 }, { -2, 2 },
                                     { -1, -1 }, { 1, -1 }, { 1, 1 }, { -1, 1 } };

    IndexList outerPolygon = { 0, 1, 2, 3 };
    IndexList innerPolygon = { 7, 6, 5, 4 };

    auto mergedPolygon = removeHoles(pointList, outerPolygon, { innerPolygon });

    // 2 x 4 vertices + 2 for the connection-edge
    REQUIRE(mergedPolygon.size() == 10);

    std::vector<std::uint16_t> correctPolygon = { 2, 3, 0, 1, 2, 6, 5, 4, 7, 6 };
    REQUIRE(mergedPolygon == correctPolygon);
}

TEST_CASE("Can deal with empty holes")
{
    auto nothing = removeHoles({}, {}, {IndexList{}});
    REQUIRE(nothing.empty());
}

TEST_CASE("Issue #1")
{
    std::vector<Point> pointList = {
        { 103.923, 1300 },  { 69.2821, 1280 },  { 69.2821, 1240 },  { 34.641, 1180 },   { 0, 1160 },
        { -69.282, 1120 },  { -103.923, 1100 }, { -138.564, 1120 }, { -207.846, 1160 }, { -277.128, 1120 },
        { -311.769, 1100 }, { -381.051, 1100 }, { -415.692, 1120 }, { -484.974, 1160 }, { -519.615, 1100 },
        { -450.333, 1060 }, { -415.692, 1040 }, { -381.051, 980 },  { -381.051, 940 },  { -415.692, 880 },
        { -450.333, 860 },  { -519.615, 860 },  { -588.897, 860 },  { -658.179, 860 },  { -727.461, 860 },
        { -796.743, 860 },  { -831.384, 880 },  { -866.025, 860 },  { -866.025, 820 },  { -831.384, 800 },
        { -796.743, 820 },  { -727.461, 820 },  { -658.179, 820 },  { -588.897, 820 },  { -519.615, 820 },
        { -484.974, 800 },  { -484.974, 760 },  { -484.974, 680 },  { -450.333, 620 },  { -450.333, 580 },
        { -484.974, 560 },  { -554.256, 520 },  { -588.897, 500 },  { -623.538, 520 },  { -692.82, 560 },
        { -727.461, 580 },  { -762.102, 640 },  { -831.384, 640 },  { -866.025, 620 },  { -935.307, 580 },
        { -969.948, 560 },  { -969.948, 520 },  { -935.307, 500 },  { -900.666, 520 },  { -900.666, 560 },
        { -866.025, 580 },  { -796.743, 580 },  { -762.102, 560 },  { -692.82, 520 },   { -658.179, 500 },
        { -658.179, 460 },  { -692.82, 400 },   { -727.461, 380 },  { -762.102, 400 },  { -796.743, 460 },
        { -866.025, 460 },  { -900.666, 400 },  { -935.307, 340 },  { -969.948, 280 },  { -1004.59, 260 },
        { -1039.23, 200 },  { -969.948, 200 },  { -935.307, 260 },  { -900.666, 320 },  { -866.025, 380 },
        { -831.384, 400 },  { -796.743, 380 },  { -727.461, 340 },  { -658.179, 380 },  { -623.538, 400 },
        { -554.256, 400 },  { -484.974, 440 },  { -450.333, 500 },  { -415.692, 520 },  { -381.051, 500 },
        { -346.41, 440 },   { -346.41, 400 },   { -346.41, 320 },   { -346.41, 280 },   { -381.051, 220 },
        { -381.051, 140 },  { -381.051, 100 },  { -415.692, 40 },   { -450.333, -20 },  { -484.974, -40 },
        { -554.256, -40 },  { -623.538, -80 },  { -658.179, -140 }, { -692.82, -160 },  { -727.461, -140 },
        { -762.102, -80 },  { -831.384, -80 },  { -866.025, -100 }, { -935.307, -140 }, { -969.948, -160 },
        { -969.948, -200 }, { -935.307, -220 }, { -900.666, -200 }, { -900.666, -160 }, { -866.025, -140 },
        { -796.743, -140 }, { -762.102, -160 }, { -692.82, -200 },  { -623.538, -160 }, { -588.897, -140 },
        { -519.615, -100 }, { -484.974, -80 },  { -415.692, -40 },  { -381.051, -20 },  { -346.41, -40 },
        { -346.41, -80 },   { -346.41, -160 },  { -277.128, -200 }, { -242.487, -220 }, { -242.487, -260 },
        { -277.128, -320 }, { -311.769, -340 }, { -381.051, -380 }, { -415.692, -400 }, { -484.974, -400 },
        { -519.615, -380 }, { -554.256, -400 }, { -554.256, -440 }, { -519.615, -460 }, { -484.974, -440 },
        { -415.692, -440 }, { -346.41, -440 },  { -311.769, -460 }, { -311.769, -500 }, { -346.41, -560 },
        { -381.051, -580 }, { -450.333, -620 }, { -484.974, -640 }, { -554.256, -680 }, { -554.256, -760 },
        { -554.256, -800 }, { -554.256, -880 }, { -484.974, -920 }, { -415.692, -920 }, { -346.41, -920 },
        { -311.769, -940 }, { -242.487, -980 }, { -207.846, -920 }, { -207.846, -880 }, { -173.205, -860 },
        { -103.923, -820 }, { -69.282, -760 },  { -34.641, -740 },  { 34.641, -740 },   { 103.923, -740 },
        { 138.564, -760 },  { 173.205, -820 },  { 242.487, -860 },  { 311.769, -860 },  { 381.051, -820 },
        { 381.051, -740 },  { 381.051, -700 },  { 415.692, -640 },  { 415.692, -560 },  { 415.692, -520 },
        { 415.692, -440 },  { 415.692, -400 },  { 450.333, -340 },  { 484.974, -320 },  { 554.256, -320 },
        { 588.897, -340 },  { 623.538, -400 },  { 623.538, -440 },  { 623.538, -520 },  { 623.538, -560 },
        { 623.538, -640 },  { 623.538, -680 },  { 623.538, -760 },  { 658.179, -820 },  { 727.461, -860 },
        { 796.743, -860 },  { 831.384, -880 },  { 866.025, -860 },  { 866.025, -820 },  { 831.384, -800 },
        { 796.743, -820 },  { 762.102, -800 },  { 692.82, -760 },   { 658.179, -740 },  { 658.179, -700 },
        { 658.179, -620 },  { 658.179, -580 },  { 658.179, -500 },  { 658.179, -460 },  { 692.82, -440 },
        { 727.461, -380 },  { 727.461, -340 },  { 762.102, -320 },  { 831.384, -320 },  { 900.666, -320 },
        { 969.948, -280 },  { 1004.59, -260 },  { 1039.23, -280 },  { 1073.87, -260 },  { 1073.87, -220 },
        { 1039.23, -200 },  { 1004.59, -220 },  { 935.307, -260 },  { 900.666, -280 },  { 831.384, -280 },
        { 762.102, -280 },  { 727.461, -260 },  { 692.82, -200 },   { 692.82, -160 },   { 727.461, -100 },
        { 762.102, -80 },   { 831.384, -40 },   { 831.384, 40 },    { 831.384, 80 },    { 866.025, 100 },
        { 866.025, 140 },   { 831.384, 160 },   { 796.743, 140 },   { 796.743, 100 },   { 796.743, 20 },
        { 796.743, -20 },   { 762.102, -40 },   { 692.82, -40 },    { 658.179, -100 },  { 658.179, -140 },
        { 623.538, -200 },  { 588.897, -220 },  { 554.256, -200 },  { 519.615, -140 },  { 450.333, -100 },
        { 415.692, -80 },   { 346.41, -40 },    { 311.769, -20 },   { 311.769, 20 },    { 311.769, 100 },
        { 277.128, 160 },   { 242.487, 220 },   { 242.487, 260 },   { 277.128, 320 },   { 311.769, 380 },
        { 346.41, 400 },    { 415.692, 440 },   { 450.333, 500 },   { 450.333, 580 },   { 450.333, 620 },
        { 484.974, 680 },   { 519.615, 700 },   { 588.897, 740 },   { 623.538, 760 },   { 623.538, 800 },
        { 588.897, 820 },   { 554.256, 800 },   { 554.256, 760 },   { 519.615, 740 },   { 450.333, 700 },
        { 415.692, 640 },   { 381.051, 620 },   { 311.769, 580 },   { 277.128, 520 },   { 277.128, 440 },
        { 277.128, 400 },   { 242.487, 380 },   { 173.205, 380 },   { 138.564, 400 },   { 138.564, 440 },
        { 138.564, 520 },   { 103.923, 580 },   { 103.923, 620 },   { 138.564, 680 },   { 173.205, 740 },
        { 207.846, 760 },   { 277.128, 800 },   { 311.769, 860 },   { 346.41, 920 },    { 381.051, 940 },
        { 381.051, 980 },   { 346.41, 1000 },   { 311.769, 980 },   { 311.769, 940 },   { 277.128, 880 },
        { 242.487, 820 },   { 207.846, 800 },   { 138.564, 800 },   { 103.923, 820 },   { 103.923, 860 },
        { 103.923, 940 },   { 103.923, 980 },   { 103.923, 1060 },  { 103.923, 1100 },  { 103.923, 1180 },
        { 103.923, 1220 },  { 138.564, 1240 },  { 138.564, 1280 },  { -34.641, 1100 },  { 0, 1120 },
        { 34.641, 1100 },   { 69.2821, 1040 },  { 69.2821, 1000 },  { 34.641, 940 },    { 0, 880 },
        { -34.641, 860 },   { -103.923, 820 },  { -138.564, 800 },  { -207.846, 800 },  { -242.487, 820 },
        { -242.487, 860 },  { -207.846, 920 },  { -207.846, 1000 }, { -207.846, 1040 }, { -173.205, 1060 },
        { -103.923, 1060 }, { -484.974, -880 }, { -519.615, -860 }, { -519.615, -820 }, { -519.615, -740 },
        { -519.615, -700 }, { -484.974, -680 }, { -415.692, -640 }, { -381.051, -620 }, { -311.769, -580 },
        { -277.128, -520 }, { -242.487, -500 }, { -173.205, -500 }, { -138.564, -520 }, { -103.923, -580 },
        { -103.923, -620 }, { -103.923, -700 }, { -103.923, -740 }, { -138.564, -760 }, { -207.846, -800 },
        { -242.487, -820 }, { -311.769, -820 }, { -381.051, -860 }, { -415.692, -880 }, { 34.641, -580 },
        { -34.641, -580 },  { -69.282, -560 },  { -103.923, -500 }, { -103.923, -460 }, { -69.282, -440 },
        { 0, -400 },        { 34.641, -380 },   { 69.2821, -400 },  { 103.923, -460 },  { 103.923, -500 },
        { 69.2821, -560 },  { 346.41, -640 },   { 346.41, -680 },   { 346.41, -760 },   { 346.41, -800 },
        { 311.769, -820 },  { 242.487, -820 },  { 207.846, -800 },  { 173.205, -740 },  { 103.923, -700 },
        { 69.2821, -680 },  { 69.2821, -640 },  { 103.923, -580 },  { 138.564, -520 },  { 173.205, -460 },
        { 207.846, -440 },  { 242.487, -460 },  { 311.769, -500 },  { 346.41, -520 },   { 346.41, -560 },
        { 138.564, -80 },   { 103.923, -100 },  { 34.641, -100 },   { 0, -80 },         { -34.641, -20 },
        { -34.641, 20 },    { 0, 80 },          { 34.641, 100 },    { 103.923, 100 },   { 138.564, 80 },
        { 173.205, 20 },    { 173.205, -20 },   { 311.769, -380 },  { 346.41, -400 },   { 346.41, -440 },
        { 311.769, -460 },  { 277.128, -440 },  { 277.128, -400 },  { -242.487, 980 },  { -242.487, 940 },
        { -277.128, 920 },  { -311.769, 940 },  { -311.769, 980 },  { -277.128, 1000 }, { -173.205, 700 },
        { -207.846, 680 },  { -242.487, 700 },  { -242.487, 740 },  { -207.846, 760 },  { -173.205, 740 },
        { 69.2821, 640 },   { 69.2821, 560 },   { 103.923, 500 },   { 103.923, 460 },   { 69.2821, 440 },
        { 0, 440 },         { -34.641, 460 },   { -103.923, 500 },  { -138.564, 520 },  { -173.205, 580 },
        { -173.205, 620 },  { -138.564, 680 },  { -103.923, 700 },  { -34.641, 740 },   { 0, 760 },
        { 69.2821, 760 },   { 103.923, 740 },   { 103.923, 700 },   { -103.923, 340 },  { -138.564, 320 },
        { -207.846, 320 },  { -242.487, 340 },  { -242.487, 380 },  { -207.846, 400 },  { -138.564, 400 },
        { -103.923, 380 },  { 0, -680 },        { -34.641, -700 },  { -69.282, -680 },  { -69.282, -640 },
        { -34.641, -620 },  { 0, -640 },        { -415.692, 760 },  { -381.051, 740 },  { -381.051, 700 },
        { -415.692, 680 },  { -450.333, 700 },  { -450.333, 740 }
    };
    IndexList outer = {
        //
        0,   1,   2,   3,   4,   5,   6,   7,   8,   9,   10,  11,  12,  13,  14,  15,  16,  17,  18,  19,  20,  21,
        22,  23,  24,  25,  26,  27,  28,  29,  30,  31,  32,  33,  34,  35,  36,  37,  38,  39,  40,  41,  42,  43,
        44,  45,  46,  47,  48,  49,  50,  51,  52,  53,  54,  55,  56,  57,  58,  59,  60,  61,  62,  63,  64,  65,
        66,  67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,  78,  79,  80,  81,  82,  83,  84,  85,  86,  87,
        88,  89,  90,  91,  92,  93,  94,  95,  96,  97,  98,  99,  100, 101, 102, 103, 104, 105, 106, 107, 108, 109,
        110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
        132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
        154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
        176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
        198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
        220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
        242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263,
        264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285,
        286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302
    };
//    std::vector<IndexList> holes = {
//        { 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320 },
//        { 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332,
//          333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343 },
//        { 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355 },
//        { 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374 },
//        { 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386 },
//        { 387, 388, 389, 390, 391, 392 }, // It fails on this one
//        { 393, 394, 395, 396, 397, 398 },
//        { 399, 400, 401, 402, 403, 404 },
//        { 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422 },
//        { 423, 424, 425, 426, 427, 428, 429, 430 },
//        { 431, 432, 433, 434, 435, 436 },
//        { 437, 438, 439, 440, 441, 442 },
//    };


    // This one crashes
    IndexList holeThatGeneratedWeirdConnection = {356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374};
    IndexList holeThatTriggersTheCrash = { 387, 388, 389, 390, 391, 392 };

    // Try not to crash
    auto good = removeHoles(pointList, outer, {holeThatGeneratedWeirdConnection});
    //std::ofstream svg("error.svg");
    //svg::writePolygon(svg, pointList, good, {holeThatTriggersTheCrash});
    auto bad = removeHoles(pointList, good, {holeThatTriggersTheCrash});

    REQUIRE(true);
}
